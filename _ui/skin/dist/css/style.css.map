{"version":3,"sources":["webpack:///_sprite.scss","webpack:///style.scss"],"names":[],"mappings":"AAwII,cAlBF,yDAAuB,EAXvB,6BAtF4D,EA4F5D,iCA5FiC,EA4EjC,WA5E6C;;AAmH3C,iBAlBF,yDAAuB,EAXvB,6BA3EgE,EAiFhE,iCAjFoC,EAiEpC,YAjEiD;;AAwG/C,aAlBF,yDAAuB,EAXvB,6BAhEwD,EAsExD,+BAtE6B,EAsD7B,WAtDyC;;AA6FvC,qBAlBF,yDAAuB,EAXvB,6BArDkE,EA2DlE,+BA3DqC,EA2CrC,YA3C4C,CAAO;;AAkFjD,qBAlBF,yDAAuB,EAXvB,6BA1C6D,EAgD7D,4BAhDgC,EAgChC,YAhCuC,CAAO;;AC7DhD,OACE,eAAe,EACf,YAAY;;AAGd,YACE,iDAAgD","file":"css/style.css","sourcesContent":["// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$arrow-name: 'arrow';\n$arrow-x: 694px;\n$arrow-y: 12px;\n$arrow-offset-x: -694px;\n$arrow-offset-y: -12px;\n$arrow-width: 19px;\n$arrow-height: 12px;\n$arrow-total-width: 1428px;\n$arrow-total-height: 299px;\n$arrow-image: '../img/sprite.png';\n$arrow: (694px, 12px, -694px, -12px, 19px, 12px, 1428px, 299px, '../img/sprite.png', 'arrow', );\n$cta-text-name: 'cta-text';\n$cta-text-x: 553px;\n$cta-text-y: 12px;\n$cta-text-offset-x: -553px;\n$cta-text-offset-y: -12px;\n$cta-text-width: 136px;\n$cta-text-height: 14px;\n$cta-text-total-width: 1428px;\n$cta-text-total-height: 299px;\n$cta-text-image: '../img/sprite.png';\n$cta-text: (553px, 12px, -553px, -12px, 136px, 14px, 1428px, 299px, '../img/sprite.png', 'cta-text', );\n$dots-name: 'dots';\n$dots-x: 553px;\n$dots-y: 0px;\n$dots-offset-x: -553px;\n$dots-offset-y: 0px;\n$dots-width: 875px;\n$dots-height: 7px;\n$dots-total-width: 1428px;\n$dots-total-height: 299px;\n$dots-image: '../img/sprite.png';\n$dots: (553px, 0px, -553px, 0px, 875px, 7px, 1428px, 299px, '../img/sprite.png', 'dots', );\n$headline-1-1-name: 'headline-1-1';\n$headline-1-1-x: 279px;\n$headline-1-1-y: 0px;\n$headline-1-1-offset-x: -279px;\n$headline-1-1-offset-y: 0px;\n$headline-1-1-width: 269px;\n$headline-1-1-height: 268px;\n$headline-1-1-total-width: 1428px;\n$headline-1-1-total-height: 299px;\n$headline-1-1-image: '../img/sprite.png';\n$headline-1-1: (279px, 0px, -279px, 0px, 269px, 268px, 1428px, 299px, '../img/sprite.png', 'headline-1-1', );\n$headline-1-2-name: 'headline-1-2';\n$headline-1-2-x: 0px;\n$headline-1-2-y: 0px;\n$headline-1-2-offset-x: 0px;\n$headline-1-2-offset-y: 0px;\n$headline-1-2-width: 274px;\n$headline-1-2-height: 299px;\n$headline-1-2-total-width: 1428px;\n$headline-1-2-total-height: 299px;\n$headline-1-2-image: '../img/sprite.png';\n$headline-1-2: (0px, 0px, 0px, 0px, 274px, 299px, 1428px, 299px, '../img/sprite.png', 'headline-1-2', );\n$spritesheet-width: 1428px;\n$spritesheet-height: 299px;\n$spritesheet-image: '../img/sprite.png';\n$spritesheet-sprites: ($arrow, $cta-text, $dots, $headline-1-1, $headline-1-2, );\n$spritesheet: (1428px, 299px, '../img/sprite.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-background-size($sprite) {\n  $sprite-total-width: nth($sprite, 7);\n  $sprite-total-height: nth($sprite, 8);\n  background-size: $sprite-total-width $sprite-total-height;\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-background-size($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .icon-#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n","@import 'sprite';\n\n@include sprites($spritesheet-sprites);\n\nbody {\n  background: red;\n  border: none;\n}\n\n.asdfasdf {\n  background-image: url('../img/assets/arrow.png');\n}"],"sourceRoot":""}